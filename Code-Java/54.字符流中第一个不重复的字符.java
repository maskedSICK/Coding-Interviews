/*
请实现一个函数用来找出字符流中第一个只出现一次的字符。例如，当从字符流中只读出前两个字符"go"时，第一个只出现一次的字符是"g"。
当从该字符流中读出前六个字符“google"时，第一个只出现一次的字符是"l"。

思想：跟“第一个只出现一次的字符”一样
*/

import java.util.Map;
import java.util.LinkedHashMap;

public class Solution {
    Map<Character, Integer> map = new LinkedHashMap<>();
    
    //Insert one char from stringstream
    public void Insert(char ch)
    {
        if(map.containsKey(ch)){
            int count = map.get(ch) + 1;
            map.put(ch, count);
        }
        else{
            map.put(ch, 1);
        }
    }
    
  	//return the first appearence once char in current stringstream
    public char FirstAppearingOnce()
    {
        for(char key : map.keySet()){
            if(map.get(key) == 1)
                return key;
        }
    	return '#';
    }
}